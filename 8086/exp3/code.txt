;--------------------------------------------------------------------------
;
;              Build this with the "Source" menu using
;                     "Build All" option
;
;--------------------------------------------------------------------------
;
;                           实验三程序通用框架
;
;--------------------------------------------------------------------------
; 功能： 程序框架					                            				   |
; 编写：《嵌入式系统原理与实验》课程组                   				   |
; 版本：3.5
; 修订：B
;--------------------------------------------------------------------------


		DOSSEG
		.MODEL	SMALL		; 设定8086汇编程序使用Small model
		.8086				; 设定采用8086汇编指令集

;-----------------------------------------------------------
;	定义堆栈段                                             |
;-----------------------------------------------------------
	.stack 100h				; 定义256字节容量的堆栈

;-------------------------------------------------------------------------
;	符号定义                                                              |
;-------------------------------------------------------------------------
;
;
; 8253芯片端口地址 （Port Address):
L8253T0			EQU	100H			; Timer0's port number in I/O space
L8253T1			EQU 	102H			; Timer1's port number in I/O space
L8253T2			EQU 	104H			; Timer2's port number in I/O space
L8253CS			EQU 	106H			; 8253 Control Register's port number in I/O space
;
; 8255芯片端口地址 （Port Address):
L8255PA			EQU	121H			; Port A's port number in I/O space
L8255PB			EQU 	123H			; Port B's port number in I/O space
L8255PC			EQU 	125H			; Port C's port number in I/O space
L8255CS			EQU 	127H			; 8255 Control Register's port number in I/O space
;
;  中断矢量号定义
IRQNum			EQU	52H			; 中断矢量号,要根据学号计算得到后更新此定义。

Patch_Protues	EQU	IN AL, 0	;	Simulation Patch for Proteus, please ignore this line

;=======================================================================
; 宏定义
;=======================================================================

; 修补Proteus仿真的BUG，参见程序段中的使用说明
    WaitForHWInt MACRO INTNum		; INTNum is the HW INT number
		MOV AL, INTNum   			;
		OUT 0,AL					;
		STI
		CLI
    ENDM



;-----------------------------------------------------------
;	定义数据段                                             |
;-----------------------------------------------------------
		.data					; 定义数据段;

DelayShort	dw	60				; 短延时参量 require1 60  require2 6000	
DelayLong	dw	0FFFFFFFFH			; 长延时参量


; SEGTAB is the code for displaying "0-F", and some of the codes may not be correct. Find and correct the errors.
	SEGTAB  DB 3FH	; 7-Segment Tube
		DB 06H	;
		DB 5BH	;            a a a
		DB 4FH	;         f         b
		DB 66H	;         f         b
		DB 6DH	;         f         b
		DB 7DH	;            g g g 
		DB 07H	;         e         c
		DB 7FH	;         e         c
		DB 6FH	;         e         c
        	DB 77H	;            d d d     h h h
		DB 7CH	; ----------------------------------
		DB 39H	;       b7 b6 b5 b4 b3 b2 b1 b0
		DB 5EH	;       DP  g  f  e  d  c  b  a
		DB 79H	;
		DB 71H	;

;-----------------------------------------------------------
;	定义代码段                                             |
;-----------------------------------------------------------
		.code						; Code segment definition
		.startup					; Entrance of this program
;------------------------------------------------------------------------
		Patch_Protues					; Simulation Patch for Proteus,
								; Please ignore the above code line.
;------------------------------------------------------------------------

START:								; Modify the following codes accordingly
	CALL main							; 
main PROC
		CLI						; Disable interrupts
		MOV AX, @DATA					;
		MOV DS, AX					; Initialize DS

		CALL INIT8255					; Initialize 8255 
		CALL INIT8253					; Initialize 8253
		
		MOV  BL, IRQNum					; BL is used as a parameter to call the procedure INT_INIT
		CALL INT_INIT					; Procedure INT_INIT is used to set up the IVT
	       
	       CALL Require1b
	       CALL DELAY1
	       HLT
main ENDP

Require1b PROC
		CALL DISPLAY8255				; Procedure DISPLAY8255 is used to contrl 7-segment tubes
		; Put you code here


;===================================================================================
; Attention:
; The following codes is a Patching for Proteus 8086 Hardware Simulation Bug.
; Use these codes in the case you want the 8086 to halt and waiting for HW INT only! 
; You can treat it as if it doesn't exist. 
;
; If you need to use HW INT, please uncomment it, or
; Don't modify it, leave it here just as it is.
;		WaitForHWInt IRQNum				
;====================================================================================
		CALL	Require1b

		RET						; 
Require1b ENDP
;=====================================================================================
Require2c proc
   MOV DX,L8253CS
    MOV AL,01110110B
    OUT DX,AL
    
    MOV AX,64H;100
   MOV DX,L8253T1
   OUT DX,AL
   MOV AL,AH
   OUT DX,AL
require2c endp

Require3 PROC
   CALL DELAY1
   RET
Require3 ENDP

Require4 PROC
   MOV DL,0H
   CALL DELAY1
   RET
Require4 ENDP

;--------------------------------------------
;                                           |
; INIT 8255 					            |
;                                           |
;--------------------------------------------
INIT8255 PROC

		; Init 8255 in Mode x,	L8255PA xPUT, L8255PB xPUT, L8255PCU xPUT, L8255PCL xPUT
      MOV AL,10001001B
      MOV DX,L8255CS
      OUT DX,AL


		RET
INIT8255 ENDP

;--------------------------------------------
;                                           |
; INIT 8253 					            |
;                                           |
;--------------------------------------------
INIT8253 PROC

; Set the mode and the initial count for Timer0
    MOV DX,L8253CS
    MOV AL,00110110B
    OUT DX,AL
    
    MOV AX,2710H;10000
   MOV DX,L8253T0
   OUT DX,AL
   MOV AL,AH
   OUT DX,AL

; Set the mode and the initial count for Timer1


; Set the mode and the initial count for Timer2


		RET
INIT8253 ENDP

;--------------------------------------------
;                                           |
; DISPLAY  STUDENTS ID				 		|
;                                           |
;--------------------------------------------

DISPLAY8255 PROC
; Put your code here
L1:  
    MOV AL,10001110B
    MOV DX,L8255PA
    OUT DX,AL

    MOV BX,0H
    MOV AL,SEGTAB[BX]
    MOV DX,L8255PB
    OUT DX,AL
    CALL DELAY
    
    MOV AL,10001101B
    MOV DX,L8255PA
    OUT DX,AL
    
    MOV BX,4H
    MOV AL,SEGTAB[BX]
    MOV DX,L8255PB
    OUT DX,AL
    CALL DELAY
    
    MOV AL,10001011B
    MOV DX,L8255PA
    OUT DX,AL
    
    MOV BX,6H
    MOV AL,SEGTAB[BX]
    MOV DX,L8255PB
    OUT DX,AL
    CALL DELAY
    
    MOV AL,10000111B
    MOV DX,L8255PA
    OUT DX,AL
    
    MOV BX,8H
    MOV AL,SEGTAB[BX]
    MOV DX,L8255PB
    OUT DX,AL
    CALL DELAY
    
    JMP L1
		RET
	
DISPLAY8255 ENDP

Require1c PROC
L2:
    MOV AL,10000001B
    MOV DX,L8255CS
    OUT DX,AL

    MOV DX,L8255PC
    IN  AL,DX
    
    MOV BL,AL
    AND BL,0BFH
    
    MOV CL,AL
    MOV CL,6H
    SHL AL,CL
    AND AL,40H
    XOR AL,BL

    MOV DX,L8255PC
    OUT DX,AL
    CALL Delay1
    JMP L2
Require1c ENDP

Require2b PROC
    MOV AL,10000001B
    MOV DX,L8255CS
    OUT DX,AL
L3:
    MOV DX,L8255PC
    IN  AL,DX
    
    MOV BL,AL
    AND BL,0BFH
    
    MOV CL,AL
    MOV CL,6H
    SHL AL,CL
    AND AL,40H
    XOR AL,BL

    MOV DX,L8255PC
    OUT DX,AL
;-------------------

    ;MOV AL,0FFH
    ;MOV DX,L8253T0
    ;OUT DX,AL

    CALL DELAY
    JMP L3
    HLT
Require2b ENDP

;--------------------------------------------------------------
;                                                             |                                                            |
; Function：DELAY FUNCTION                                    | 
; Input：None												  |
; Output: None                                                |
;--------------------------------------------------------------

DELAY 	PROC
    	PUSH CX
    	MOV CX,DelayShort
D1: 	LOOP D1
    	POP CX
    	RET
DELAY 	ENDP

DELAY1 	PROC
    	PUSH CX
    	MOV CX,DelayLong
D1: 	LOOP D1
    	POP CX
    	RET
DELAY1 	ENDP

;-------------------------------------------------------------
;                                                             |                                                            |
; Function：INTERRUPT Vector Table INIT						  |
; Input: BL = Interrupt number								  |
; Output: None			                                	  |
;                                                             |
;-------------------------------------------------------------	
INT_INIT	PROC FAR			; The code is not complete and you should finalize the procedure
		;CLI				; Disable interrupt
		STI
		MOV AX, 0
		MOV ES, AX			; To set up the interrupt vector table
; Put your code here
; Hint: you can use the directives such as SEGMENT,OFFSET to get the segment value and the offset of a label
	        MOV BX,52*4
		MOV AX,OFFSET ISR52
		MOV ES:WORD PTR [BX],AX
		MOV AX,SEG ISR52
		MOV ES:WORD PTR [BX+2],AX
		

		RET				; Do not to forget to return back from a procedure		
INT_INIT	ENDP

ISR52 PROC FAR  
   MOV DX,L8255PC
   IN  AL,DX
   NOT AL
   MOV AH,AL
   
   MOV AL,10000000B
   MOV DX,L8255CS
   OUT DX,AL
   
   MOV AL,AH
   MOV DX,L8255PC
   OUT DX,AL
   
   CALL INT_INIT
   HLT
ISR52 ENDP

ISR53 PROC FAR
   CALL ISR53INNER
   CALL INT_INIT
   HLT
ISR53 ENDP

ISR53INNER PROC FAR
   INC DL
   
   MOV DH,4H
   CMP DL,DH
   JE ISR53CASE4
   
   MOV DH,3H
   CMP DL,DH
   JE ISR53CASE3
   
   MOV DH,2H
   CMP DL,DH
   JE ISR53CASE2
   
   MOV DH,1H
   CMP DL,DH
   JE ISR53CASE1
   
   RET
   
ISR53CASE1:
   MOV AL,10001110B
   MOV DX,L8255PA
   OUT DX,AL
    
   MOV BX,0H
   MOV AL,SEGTAB[BX]
   MOV DX,L8255PB
   OUT DX,AL
   MOV DL,1H
   RET
   
ISR53CASE2:
   MOV AL,10001101B
   MOV DX,L8255PA
   OUT DX,AL
    
   MOV BX,4H
   MOV AL,SEGTAB[BX]
   MOV DX,L8255PB
   OUT DX,AL
   MOV DL,2H
   RET
   
ISR53CASE3:
   MOV AL,10001011B
   MOV DX,L8255PA
   OUT DX,AL
    
   MOV BX,6H
   MOV AL,SEGTAB[BX]
   MOV DX,L8255PB
   OUT DX,AL
   MOV DL,3H
   RET
   
ISR53CASE4:
   MOV AL,10000111B
   MOV DX,L8255PA
   OUT DX,AL
    
   MOV BX,8H
   MOV AL,SEGTAB[BX]
   MOV DX,L8255PB
   OUT DX,AL
   MOV DL,0H
   RET
ISR53INNER ENDP

;--------------------------------------------------------------
;                                                             |                                                            |
; FUNCTION: INTERRUPT SERVICE  Routine （ISR）				  | 
; Input::                                                     |
; Output:                                                     |
;                                                             |
;--------------------------------------------------------------	
		
MYIRQ 	PROC FAR				; The code is not complete and you should finalize the procedure
; Put your code here

						; Do not forget to return back from a ISR
MYIRQ 	ENDP

	END					